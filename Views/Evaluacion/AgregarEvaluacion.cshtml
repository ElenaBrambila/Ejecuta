
@{
    ViewBag.Title = "Información";
    int idCliente = Model;
}
<div style="background-color:#eee;padding:10px" class="head-module">

    <div>
        <span style="margin-right:35px" class="modulo-titulo">@ViewBag.Title</span>
        <br />  <br />
        <label>Cadena: Cadena 1</label>
        <br />
        <label>Plaza: Plaza 1</label>
        <br />
        <label>Determinante: Det 1</label>
        <br />
    </div>

    <div class="clearfix"></div>
    <span>
    </span>

</div>
<br />
<hr />
<div class="col-md-12" style="padding-top:3%">
    <div class="col-md-6">

        <div class="carousel">
            <button id="retroceder">Retroceder</button>
            <div id="imagen"></div>
            <button id="avanzar">Avanzar</button>
        </div>
    </div>
    <div class="col-md-6">
        <div class="row">
            <div class="col-md-12">
                @(Html.Kendo().Grid<IntegramsaUltimate.Models.TableViewModels.TablePonderacionViewModel>()
                    .Name("tabla")

                     .Columns(c =>
                     {
                         c.Bound(p => p.id).Title("#").Width(50).Hidden(true);
                         c.Bound(p => p.cliente).Title("Cliente");
                         c.Bound(p => p.segmento).Title("Ponderación");
                         c.Bound(p => p.ponderacion).Title("Valor");
                         c.Command(command => { command.Edit(); }).Width(250);
                     })
                        .Editable(editable => editable.Mode(GridEditMode.InLine).ConfirmDelete("Continue to delete this record?").DisplayDeleteConfirmation("Continue to delete this record?"))
                        .Excel(excel => excel
                            .FileName("reporte.xlsx")
                            .AllPages(true)
                             .ProxyURL(Url.Action("JsonGrid", "Ponderacion", new { idCliente = idCliente }))
                         )
                        .Resizable(resize => resize.Columns(true))
                        .DataSource(d => d.Ajax()
                        .Model(model =>
                        {
                            model.Id(p => p.id);
                            model.Field(p => p.cliente).Editable(false);
                            model.Field(p => p.segmento).Editable(false);
                            model.Field(p => p.ponderacion).Editable(true);
                        })
                            .Sort(sort =>
                            {
                                sort.Add("cliente").Ascending();
                                sort.Add("segmento").Ascending();
                            })
                            .Create(update => update.Action("JsonGrid", "Nuevo", new { idCliente = idCliente }))
                           .Read(r => r.Action("JsonGrid", "Ponderacion", new { idCliente = idCliente }))
                           .Update(update => update.Action("GuardarEditar", "Ponderacion"))
                        )

        )
            </div>
        </div>
    </div>
</div>




<script type="text/javascript">
    function isEditable(dataItem) {

        return dataItem.Id != 3;

    }
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>





<style>

    .carousel {
        max-width: 400px;
        margin: 0 auto;
        display: flex;
    }

    .co {
        margin-top: 3%;
    }

    #imagen {
        width: 100%;
        height: 400px;
        background-size: cover;
    }
</style>
<script>
    window.onload = function () {
        // Variables
        const IMAGENES = [
            "https://portalsistema.com/fotosReportes/680239.jpg",
            'https://portalsistema.com/fotosReportes/680298.jpg',
            'https://portalsistema.com/fotosReportes/680239.jpg'
        ];
        const TIEMPO_INTERVALO_MILESIMAS_SEG = 1000;
        let posicionActual = 0;
        let $botonRetroceder = document.querySelector('#retroceder');
        let $botonAvanzar = document.querySelector('#avanzar');
        let $imagen = document.querySelector('#imagen');
        let $botonPlay = document.querySelector('#play');
        let $botonStop = document.querySelector('#stop');
        let intervalo;

        // Funciones

        /**
         * Funcion que cambia la foto en la siguiente posicion
         */
        function pasarFoto() {
            if (posicionActual >= IMAGENES.length - 1) {
                posicionActual = 0;
            } else {
                posicionActual++;
            }
            renderizarImagen();
        }

        /**
         * Funcion que cambia la foto en la anterior posicion
         */
        function retrocederFoto() {
            if (posicionActual <= 0) {
                posicionActual = IMAGENES.length - 1;
            } else {
                posicionActual--;
            }
            renderizarImagen();
        }

        /**
         * Funcion que actualiza la imagen de imagen dependiendo de posicionActual
         */
        function renderizarImagen() {
            $imagen.style.backgroundImage = `url(${IMAGENES[posicionActual]})`;
        }

        /**
         * Activa el autoplay de la imagen
         */
        function playIntervalo() {
            intervalo = setInterval(pasarFoto, TIEMPO_INTERVALO_MILESIMAS_SEG);
            // Desactivamos los botones de control
            $botonAvanzar.setAttribute('disabled', true);
            $botonRetroceder.setAttribute('disabled', true);
            $botonPlay.setAttribute('disabled', true);
            $botonStop.removeAttribute('disabled');

        }

        /**
         * Para el autoplay de la imagen
         */
        function stopIntervalo() {
            clearInterval(intervalo);
            // Activamos los botones de control
            $botonAvanzar.removeAttribute('disabled');
            $botonRetroceder.removeAttribute('disabled');
            $botonPlay.removeAttribute('disabled');
            $botonStop.setAttribute('disabled', true);
        }

        // Eventos
        $botonAvanzar.addEventListener('click', pasarFoto);
        $botonRetroceder.addEventListener('click', retrocederFoto);
        $botonPlay.addEventListener('click', playIntervalo);
        $botonStop.addEventListener('click', stopIntervalo);
        // Iniciar
        renderizarImagen();
    }

</script>
